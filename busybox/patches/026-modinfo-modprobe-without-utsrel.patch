From: Tanguy Pruvot <tanguy.pruvot@gmail.com>
Date: Mon, 13 Feb 2012 20:13:11 +0100
Subject: [PATCH] modinfo/modprobe: use ifdef block for android without-utsrel modules path

and fixes the modules.dep requirement, it is now optional...

Change-Id: Ifccb530fa23b021fd12e2395f5d0c66600b25c04
from https://github.com/tpruvot/android_external_busybox

and commit 2df42d3971f1e260e67c3fa4831cb9195fb276c4
from https://github.com/tpruvot/android_external_busybox
---
 modutils/modinfo.c  |   40 ++++++++++++++++++++++++++++++++++------
 modutils/modprobe.c |   18 +++++++++++++++++-
 2 files changed, 51 insertions(+), 7 deletions(-)

diff --git a/modutils/modinfo.c b/modutils/modinfo.c
index 7c978d1..10b2e0a 100644
--- a/modutils/modinfo.c
+++ b/modutils/modinfo.c
@@ -22,6 +22,9 @@
 #include "libbb.h"
 #include "modutils.h"
 
+#if defined(ANDROID) || defined(__ANDROID__)
+#define DONT_USE_UTS_REL_FOLDER
+#endif
 
 enum {
 	OPT_TAGS = (1 << 12) - 1, /* shortcut count */
@@ -63,7 +66,7 @@ static void modinfo(const char *path, const char *version,
 	};
 	size_t len;
 	int j, length;
-	char *ptr, *the_module;
+	char *ptr, *fullpath, *the_module;
 	const char *field = env->field;
 	int tags = env->tags;
 
@@ -77,11 +80,21 @@ static void modinfo(const char *path, const char *version,
 		if (path[0] == '/')
 			return;
 		/* Newer depmod puts relative paths in modules.dep */
-		path = xasprintf("%s/%s/%s", CONFIG_DEFAULT_MODULES_DIR, version, path);
-		the_module = xmalloc_open_zipped_read_close(path, &len);
-		free((char*)path);
-		if (!the_module)
+		fullpath = xasprintf("%s/%s/%s", CONFIG_DEFAULT_MODULES_DIR, version, path);
+		the_module = xmalloc_open_zipped_read_close(fullpath, &len);
+#ifdef DONT_USE_UTS_REL_FOLDER
+		if (!the_module) {
+			free((char*)fullpath);
+			fullpath = xasprintf("%s/%s", CONFIG_DEFAULT_MODULES_DIR, path);
+			the_module = xmalloc_open_zipped_read_close(fullpath, &len);
+		}
+#endif
+		free((char*)fullpath);
+		if (!the_module) {
+			// outputs system error msg
+			bb_perror_msg("");
 			return;
+		}
 	}
 
 	if (field)
@@ -145,9 +158,23 @@ int modinfo_main(int argc UNUSED_PARAM, char **argv)
 	uname(&uts);
 	parser = config_open2(
 		xasprintf("%s/%s/%s", CONFIG_DEFAULT_MODULES_DIR, uts.release, CONFIG_DEFAULT_DEPMOD_FILE),
-		xfopen_for_read
+		fopen_for_read
 	);
 
+#ifdef DONT_USE_UTS_REL_FOLDER
+	if (!parser) {
+		parser = config_open2(
+			xasprintf("%s/%s", CONFIG_DEFAULT_MODULES_DIR, CONFIG_DEFAULT_DEPMOD_FILE),
+			fopen_for_read
+		);
+	}
+
+	if (!parser) {
+		strcpy(uts.release,"");
+		goto no_modules_dep;
+	}
+#endif
+
 	while (config_read(parser, tokens, 2, 1, "# \t", PARSE_NORMAL)) {
 		colon = last_char_is(tokens[0], ':');
 		if (colon == NULL)
@@ -164,6 +191,7 @@ int modinfo_main(int argc UNUSED_PARAM, char **argv)
 	if (ENABLE_FEATURE_CLEAN_UP)
 		config_close(parser);
 
+no_modules_dep:
 	for (i = 0; argv[i]; i++) {
 		if (argv[i][0]) {
 			modinfo(argv[i], uts.release, &env);
diff --git a/modutils/modprobe.c b/modutils/modprobe.c
index fb6c659..9143dcd 100644
--- a/modutils/modprobe.c
+++ b/modutils/modprobe.c
@@ -147,6 +147,10 @@ static const char modprobe_longopts[] ALIGN1 =
 #define MODULE_FLAG_FOUND_IN_MODDEP     0x0004
 #define MODULE_FLAG_BLACKLISTED         0x0008
 
+#if defined(ANDROID) || defined(__ANDROID__)
+#define DONT_USE_UTS_REL_FOLDER
+#endif
+
 struct module_entry { /* I'll call it ME. */
 	unsigned flags;
 	char *modname; /* stripped of /path/, .ext and s/-/_/g */
@@ -446,10 +450,17 @@ static int do_modprobe(struct module_entry *m)
 			options = gather_options_str(options, G.cmdline_mopts);
 
 		if (option_mask32 & OPT_SHOW_DEPS) {
+#ifndef DONT_USE_UTS_REL_FOLDER
 			printf(options ? "insmod %s/%s/%s %s\n"
 					: "insmod %s/%s/%s\n",
 				CONFIG_DEFAULT_MODULES_DIR, G.uts.release, fn,
 				options);
+#else
+			printf(options ? "insmod %s/%s %s\n"
+					: "insmod %s/%s\n",
+				CONFIG_DEFAULT_MODULES_DIR, fn,
+				options);
+#endif
 			free(options);
 			continue;
 		}
@@ -531,6 +542,7 @@ int modprobe_main(int argc UNUSED_PARAM, char **argv)
 	int rc;
 	unsigned opt;
 	struct module_entry *me;
+	struct stat info;
 
 	INIT_G();
 
@@ -541,8 +553,12 @@ int modprobe_main(int argc UNUSED_PARAM, char **argv)
 
 	/* Goto modules location */
 	xchdir(CONFIG_DEFAULT_MODULES_DIR);
+#ifndef DONT_USE_UTS_REL_FOLDER
 	uname(&G.uts);
-	xchdir(G.uts.release);
+	if (stat(G.uts.release, &info) == 0) {
+		xchdir(G.uts.release);
+	}
+#endif
 
 	if (opt & OPT_LIST_ONLY) {
 		int i;
-- 
1.7.10.4

